{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cab-042-n3\\\\RiderProjects\\\\Notes.Frontend\\\\src\\\\notes\\\\NoteList.tsx\",\n  _s = $RefreshSig$();\nimport { useRef, useEffect, useState } from 'react';\nimport { Client } from '../../../notes.frontendv2/src/api/api';\nimport { FormControl } from 'react-bootstrap';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiClient = new Client('http://localhost:5223/');\nasync function createNote(note) {\n  await apiClient.createNote('1.0', note);\n  console.log('Note is created.');\n}\nconst NoteList = () => {\n  _s();\n  let textInput = useRef(null);\n  const [notes, setNotes] = useState(undefined);\n  async function getNotes() {\n    const noteListVm = await apiClient.getAll('1.0');\n    setNotes(noteListVm.notes);\n  }\n  useEffect(() => {\n    getNotes();\n  }, []);\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      const note = {\n        title: event.currentTarget.value\n      };\n      createNote(note);\n      event.currentTarget.value = '';\n      getNotes();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Notes\", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        ref: textInput,\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: notes === null || notes === void 0 ? void 0 : notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 13\n  }, this);\n};\n_s(NoteList, \"8cwTUBFprme2+JxHwoxh6FxobwI=\");\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["useRef","useEffect","useState","Client","FormControl","React","jsxDEV","_jsxDEV","apiClient","createNote","note","console","log","NoteList","_s","textInput","notes","setNotes","undefined","getNotes","noteListVm","getAll","handleKeyPress","event","key","title","currentTarget","value","children","ref","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/Cab-042-n3/RiderProjects/Notes.Frontend/src/notes/NoteList.tsx"],"sourcesContent":["import { FC, ReactElement, useRef, useEffect, useState} from 'react';\r\nimport { CreateNoteDto, Client, NoteLookupDto } from '../../../notes.frontendv2/src/api/api';\r\nimport { FormControl } from 'react-bootstrap';\r\nimport React from 'react';\r\n\r\nconst apiClient = new Client('http://localhost:5223/');\r\n\r\nasync function createNote(note: CreateNoteDto) {\r\n    await apiClient.createNote('1.0', note);\r\n    console.log('Note is created.');\r\n}\r\n\r\nconst NoteList: FC<{}> = (): ReactElement =>\r\n{\r\n    let textInput = useRef(null);\r\n    const [notes, setNotes] = useState<NoteLookupDto[] | undefined>(undefined);\r\n\r\n    async function getNotes() {\r\n        const noteListVm = await apiClient.getAll('1.0');\r\n        setNotes(noteListVm.notes);\r\n    }\r\n\r\n    useEffect(() =>\r\n    {\r\n        getNotes();\r\n\r\n    }, []);\r\n\r\n    const handleKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => \r\n    {\r\n        if(event.key === 'Enter')\r\n        {\r\n            const note: CreateNoteDto = \r\n            {\r\n                title: event.currentTarget.value\r\n            }\r\n            createNote(note);\r\n            event.currentTarget.value = '';\r\n            getNotes();\r\n        }\r\n    }\r\n\r\n    return (\r\n            <div>\r\n                Notes\r\n                <div>\r\n                    <FormControl ref={textInput} onKeyPress={handleKeyPress}/>\r\n                </div>\r\n                <div>\r\n                    {notes?.map(note => (\r\n                        <div>{note.title}</div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n    );\r\n};\r\nexport default NoteList;\r\n\r\n"],"mappings":";;AAAA,SAA2BA,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACpE,SAAwBC,MAAM,QAAuB,uCAAuC;AAC5F,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAG,IAAIL,MAAM,CAAC,wBAAwB,CAAC;AAEtD,eAAeM,UAAUA,CAACC,IAAmB,EAAE;EAC3C,MAAMF,SAAS,CAACC,UAAU,CAAC,KAAK,EAAEC,IAAI,CAAC;EACvCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;AACnC;AAEA,MAAMC,QAAgB,GAAGA,CAAA,KACzB;EAAAC,EAAA;EACI,IAAIC,SAAS,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC5B,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAA8BgB,SAAS,CAAC;EAE1E,eAAeC,QAAQA,CAAA,EAAG;IACtB,MAAMC,UAAU,GAAG,MAAMZ,SAAS,CAACa,MAAM,CAAC,KAAK,CAAC;IAChDJ,QAAQ,CAACG,UAAU,CAACJ,KAAK,CAAC;EAC9B;EAEAf,SAAS,CAAC,MACV;IACIkB,QAAQ,CAAC,CAAC;EAEd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAIC,KAA4C,IACpE;IACI,IAAGA,KAAK,CAACC,GAAG,KAAK,OAAO,EACxB;MACI,MAAMd,IAAmB,GACzB;QACIe,KAAK,EAAEF,KAAK,CAACG,aAAa,CAACC;MAC/B,CAAC;MACDlB,UAAU,CAACC,IAAI,CAAC;MAChBa,KAAK,CAACG,aAAa,CAACC,KAAK,GAAG,EAAE;MAC9BR,QAAQ,CAAC,CAAC;IACd;EACJ,CAAC;EAED,oBACQZ,OAAA;IAAAqB,QAAA,GAAK,OAED,eAAArB,OAAA;MAAAqB,QAAA,eACIrB,OAAA,CAACH,WAAW;QAACyB,GAAG,EAAEd,SAAU;QAACe,UAAU,EAAER;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACN3B,OAAA;MAAAqB,QAAA,EACKZ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmB,GAAG,CAACzB,IAAI,iBACZH,OAAA;QAAAqB,QAAA,EAAMlB,IAAI,CAACe;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACzB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAElB,CAAC;AAACpB,EAAA,CA3CID,QAAgB;AAAAuB,EAAA,GAAhBvB,QAAgB;AA4CtB,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}