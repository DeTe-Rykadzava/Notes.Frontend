{"ast":null,"code":"import { ClientBase } from \"./client-base\";\n\n//----------------------\n// <auto-generated>\n//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)\n// </auto-generated>\n//----------------------\n\n/* tslint:disable */\n/* eslint-disable */\n// ReSharper disable InconsistentNaming\n\nexport class Client extends ClientBase {\n  constructor(baseUrl, http) {\n    super();\n    this.http = void 0;\n    this.baseUrl = void 0;\n    this.jsonParseReviver = undefined;\n    this.http = http ? http : window;\n    this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://localhost:7076/swagger/v1/swagger.json\";\n  }\n\n  /**\r\n   * @return Success\r\n   */\n  getAll(version) {\n    let url_ = this.baseUrl + \"api/{version}/Note\";\n    if (version === undefined || version === null) throw new Error(\"The parameter 'version' must be defined.\");\n    url_ = url_.replace(\"{version}\", encodeURIComponent(\"\" + version));\n    url_ = url_.replace(/[?&]$/, \"\");\n    let options_ = {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\"\n      }\n    };\n    return this.transformOptions(options_).then(transformedOptions_ => {\n      return this.http.fetch(url_, transformedOptions_);\n    }).then(_response => {\n      return this.processGetAll(_response);\n    });\n  }\n  processGetAll(response) {\n    const status = response.status;\n    let _headers = {};\n    if (response.headers && response.headers.forEach) {\n      response.headers.forEach((v, k) => _headers[k] = v);\n    }\n    ;\n    if (status === 200) {\n      return response.text().then(_responseText => {\n        let result200 = null;\n        result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        return result200;\n      });\n    } else if (status === 401) {\n      return response.text().then(_responseText => {\n        let result401 = null;\n        result401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        return throwException(\"Unauthorized\", status, _responseText, _headers, result401);\n      });\n    } else if (status !== 200 && status !== 204) {\n      return response.text().then(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      });\n    }\n    return Promise.resolve(null);\n  }\n\n  /**\r\n   * @param body (optional) \r\n   * @return Created\r\n   */\n  createNote(version, body) {\n    let url_ = this.baseUrl + \"api/{version}/Note\";\n    if (version === undefined || version === null) throw new Error(\"The parameter 'version' must be defined.\");\n    url_ = url_.replace(\"{version}\", encodeURIComponent(\"\" + version));\n    url_ = url_.replace(/[?&]$/, \"\");\n    const content_ = JSON.stringify(body);\n    let options_ = {\n      body: content_,\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      }\n    };\n    return this.transformOptions(options_).then(transformedOptions_ => {\n      return this.http.fetch(url_, transformedOptions_);\n    }).then(_response => {\n      return this.processCreateNote(_response);\n    });\n  }\n  processCreateNote(response) {\n    const status = response.status;\n    let _headers = {};\n    if (response.headers && response.headers.forEach) {\n      response.headers.forEach((v, k) => _headers[k] = v);\n    }\n    ;\n    if (status === 201) {\n      return response.text().then(_responseText => {\n        let result201 = null;\n        result201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        return result201;\n      });\n    } else if (status === 401) {\n      return response.text().then(_responseText => {\n        let result401 = null;\n        result401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        return throwException(\"Unauthorized\", status, _responseText, _headers, result401);\n      });\n    } else if (status !== 200 && status !== 204) {\n      return response.text().then(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      });\n    }\n    return Promise.resolve(null);\n  }\n\n  /**\r\n   * @param body (optional) \r\n   * @return No Content\r\n   */\n  updateNotePUT(version, body) {\n    let url_ = this.baseUrl + \"api/{version}/Note\";\n    if (version === undefined || version === null) throw new Error(\"The parameter 'version' must be defined.\");\n    url_ = url_.replace(\"{version}\", encodeURIComponent(\"\" + version));\n    url_ = url_.replace(/[?&]$/, \"\");\n    const content_ = JSON.stringify(body);\n    let options_ = {\n      body: content_,\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    return this.transformOptions(options_).then(transformedOptions_ => {\n      return this.http.fetch(url_, transformedOptions_);\n    }).then(_response => {\n      return this.processUpdateNotePUT(_response);\n    });\n  }\n  processUpdateNotePUT(response) {\n    const status = response.status;\n    let _headers = {};\n    if (response.headers && response.headers.forEach) {\n      response.headers.forEach((v, k) => _headers[k] = v);\n    }\n    ;\n    if (status === 204) {\n      return response.text().then(_responseText => {\n        return;\n      });\n    } else if (status === 401) {\n      return response.text().then(_responseText => {\n        let result401 = null;\n        result401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        return throwException(\"Unauthorized\", status, _responseText, _headers, result401);\n      });\n    } else if (status !== 200 && status !== 204) {\n      return response.text().then(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      });\n    }\n    return Promise.resolve(null);\n  }\n\n  /**\r\n   * @return Success\r\n   */\n  get(id, version) {\n    let url_ = this.baseUrl + \"api/{version}/Note/{id}\";\n    if (id === undefined || id === null) throw new Error(\"The parameter 'id' must be defined.\");\n    url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n    if (version === undefined || version === null) throw new Error(\"The parameter 'version' must be defined.\");\n    url_ = url_.replace(\"{version}\", encodeURIComponent(\"\" + version));\n    url_ = url_.replace(/[?&]$/, \"\");\n    let options_ = {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\"\n      }\n    };\n    return this.transformOptions(options_).then(transformedOptions_ => {\n      return this.http.fetch(url_, transformedOptions_);\n    }).then(_response => {\n      return this.processGet(_response);\n    });\n  }\n  processGet(response) {\n    const status = response.status;\n    let _headers = {};\n    if (response.headers && response.headers.forEach) {\n      response.headers.forEach((v, k) => _headers[k] = v);\n    }\n    ;\n    if (status === 200) {\n      return response.text().then(_responseText => {\n        let result200 = null;\n        result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        return result200;\n      });\n    } else if (status === 401) {\n      return response.text().then(_responseText => {\n        let result401 = null;\n        result401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        return throwException(\"Unauthorized\", status, _responseText, _headers, result401);\n      });\n    } else if (status !== 200 && status !== 204) {\n      return response.text().then(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      });\n    }\n    return Promise.resolve(null);\n  }\n\n  /**\r\n   * @return No Content\r\n   */\n  updateNoteDELETE(id, version) {\n    let url_ = this.baseUrl + \"api/{version}/Note/{id}\";\n    if (id === undefined || id === null) throw new Error(\"The parameter 'id' must be defined.\");\n    url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\n    if (version === undefined || version === null) throw new Error(\"The parameter 'version' must be defined.\");\n    url_ = url_.replace(\"{version}\", encodeURIComponent(\"\" + version));\n    url_ = url_.replace(/[?&]$/, \"\");\n    let options_ = {\n      method: \"DELETE\",\n      headers: {}\n    };\n    return this.transformOptions(options_).then(transformedOptions_ => {\n      return this.http.fetch(url_, transformedOptions_);\n    }).then(_response => {\n      return this.processUpdateNoteDELETE(_response);\n    });\n  }\n  processUpdateNoteDELETE(response) {\n    const status = response.status;\n    let _headers = {};\n    if (response.headers && response.headers.forEach) {\n      response.headers.forEach((v, k) => _headers[k] = v);\n    }\n    ;\n    if (status === 204) {\n      return response.text().then(_responseText => {\n        return;\n      });\n    } else if (status === 401) {\n      return response.text().then(_responseText => {\n        let result401 = null;\n        result401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\n        return throwException(\"Unauthorized\", status, _responseText, _headers, result401);\n      });\n    } else if (status !== 200 && status !== 204) {\n      return response.text().then(_responseText => {\n        return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\n      });\n    }\n    return Promise.resolve(null);\n  }\n}\nexport class ApiException extends Error {\n  constructor(message, status, response, headers, result) {\n    super();\n    this.message = void 0;\n    this.status = void 0;\n    this.response = void 0;\n    this.headers = void 0;\n    this.result = void 0;\n    this.isApiException = true;\n    this.message = message;\n    this.status = status;\n    this.response = response;\n    this.headers = headers;\n    this.result = result;\n  }\n  static isApiException(obj) {\n    return obj.isApiException === true;\n  }\n}\nfunction throwException(message, status, response, headers, result) {\n  if (result !== null && result !== undefined) throw result;else throw new ApiException(message, status, response, headers, null);\n}","map":{"version":3,"names":["ClientBase","Client","constructor","baseUrl","http","jsonParseReviver","undefined","window","getAll","version","url_","Error","replace","encodeURIComponent","options_","method","headers","transformOptions","then","transformedOptions_","fetch","_response","processGetAll","response","status","_headers","forEach","v","k","text","_responseText","result200","JSON","parse","result401","throwException","Promise","resolve","createNote","body","content_","stringify","processCreateNote","result201","updateNotePUT","processUpdateNotePUT","get","id","processGet","updateNoteDELETE","processUpdateNoteDELETE","ApiException","message","result","isApiException","obj"],"sources":["C:/Users/Cab-042-n3/RiderProjects/Notes.Frontend/src/api/api.ts"],"sourcesContent":["import { ClientBase } from \"./client-base\";\r\n\r\n//----------------------\r\n// <auto-generated>\r\n//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)\r\n// </auto-generated>\r\n//----------------------\r\n\r\n/* tslint:disable */\r\n/* eslint-disable */\r\n// ReSharper disable InconsistentNaming\r\n\r\nexport class Client extends ClientBase {\r\n    private http: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> };\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(baseUrl?: string, http?: { fetch(url: RequestInfo, init?: RequestInit): Promise<Response> }) {\r\n        super();\r\n        this.http = http ? http : window as any;\r\n        this.baseUrl = baseUrl !== undefined && baseUrl !== null ? baseUrl : \"https://localhost:7076/swagger/v1/swagger.json\";\r\n    }\r\n\r\n    /**\r\n     * @return Success\r\n     */\r\n    getAll(version: string): Promise<NoteListVm> {\r\n        let url_ = this.baseUrl + \"api/{version}/Note\";\r\n        if (version === undefined || version === null)\r\n            throw new Error(\"The parameter 'version' must be defined.\");\r\n        url_ = url_.replace(\"{version}\", encodeURIComponent(\"\" + version));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_: RequestInit = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.transformOptions(options_).then(transformedOptions_ => {\r\n            return this.http.fetch(url_, transformedOptions_);\r\n        }).then((_response: Response) => {\r\n            return this.processGetAll(_response);\r\n        });\r\n    }\r\n\r\n    protected processGetAll(response: Response): Promise<NoteListVm> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver) as NoteListVm;\r\n            return result200;\r\n            });\r\n        } else if (status === 401) {\r\n            return response.text().then((_responseText) => {\r\n            let result401: any = null;\r\n            result401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ProblemDetails;\r\n            return throwException(\"Unauthorized\", status, _responseText, _headers, result401);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<NoteListVm>(null as any);\r\n    }\r\n\r\n    /**\r\n     * @param body (optional) \r\n     * @return Created\r\n     */\r\n    createNote(version: string, body: CreateNoteDto | undefined): Promise<string> {\r\n        let url_ = this.baseUrl + \"api/{version}/Note\";\r\n        if (version === undefined || version === null)\r\n            throw new Error(\"The parameter 'version' must be defined.\");\r\n        url_ = url_.replace(\"{version}\", encodeURIComponent(\"\" + version));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(body);\r\n\r\n        let options_: RequestInit = {\r\n            body: content_,\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.transformOptions(options_).then(transformedOptions_ => {\r\n            return this.http.fetch(url_, transformedOptions_);\r\n        }).then((_response: Response) => {\r\n            return this.processCreateNote(_response);\r\n        });\r\n    }\r\n\r\n    protected processCreateNote(response: Response): Promise<string> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 201) {\r\n            return response.text().then((_responseText) => {\r\n            let result201: any = null;\r\n            result201 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver) as string;\r\n            return result201;\r\n            });\r\n        } else if (status === 401) {\r\n            return response.text().then((_responseText) => {\r\n            let result401: any = null;\r\n            result401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ProblemDetails;\r\n            return throwException(\"Unauthorized\", status, _responseText, _headers, result401);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<string>(null as any);\r\n    }\r\n\r\n    /**\r\n     * @param body (optional) \r\n     * @return No Content\r\n     */\r\n    updateNotePUT(version: string, body: UpdateNoteDto | undefined): Promise<void> {\r\n        let url_ = this.baseUrl + \"api/{version}/Note\";\r\n        if (version === undefined || version === null)\r\n            throw new Error(\"The parameter 'version' must be defined.\");\r\n        url_ = url_.replace(\"{version}\", encodeURIComponent(\"\" + version));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(body);\r\n\r\n        let options_: RequestInit = {\r\n            body: content_,\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            }\r\n        };\r\n\r\n        return this.transformOptions(options_).then(transformedOptions_ => {\r\n            return this.http.fetch(url_, transformedOptions_);\r\n        }).then((_response: Response) => {\r\n            return this.processUpdateNotePUT(_response);\r\n        });\r\n    }\r\n\r\n    protected processUpdateNotePUT(response: Response): Promise<void> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 204) {\r\n            return response.text().then((_responseText) => {\r\n            return;\r\n            });\r\n        } else if (status === 401) {\r\n            return response.text().then((_responseText) => {\r\n            let result401: any = null;\r\n            result401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ProblemDetails;\r\n            return throwException(\"Unauthorized\", status, _responseText, _headers, result401);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<void>(null as any);\r\n    }\r\n\r\n    /**\r\n     * @return Success\r\n     */\r\n    get(id: string, version: string): Promise<NoteDetailsVm> {\r\n        let url_ = this.baseUrl + \"api/{version}/Note/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        if (version === undefined || version === null)\r\n            throw new Error(\"The parameter 'version' must be defined.\");\r\n        url_ = url_.replace(\"{version}\", encodeURIComponent(\"\" + version));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_: RequestInit = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Accept\": \"application/json\"\r\n            }\r\n        };\r\n\r\n        return this.transformOptions(options_).then(transformedOptions_ => {\r\n            return this.http.fetch(url_, transformedOptions_);\r\n        }).then((_response: Response) => {\r\n            return this.processGet(_response);\r\n        });\r\n    }\r\n\r\n    protected processGet(response: Response): Promise<NoteDetailsVm> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 200) {\r\n            return response.text().then((_responseText) => {\r\n            let result200: any = null;\r\n            result200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver) as NoteDetailsVm;\r\n            return result200;\r\n            });\r\n        } else if (status === 401) {\r\n            return response.text().then((_responseText) => {\r\n            let result401: any = null;\r\n            result401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ProblemDetails;\r\n            return throwException(\"Unauthorized\", status, _responseText, _headers, result401);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<NoteDetailsVm>(null as any);\r\n    }\r\n\r\n    /**\r\n     * @return No Content\r\n     */\r\n    updateNoteDELETE(id: string, version: string): Promise<void> {\r\n        let url_ = this.baseUrl + \"api/{version}/Note/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id));\r\n        if (version === undefined || version === null)\r\n            throw new Error(\"The parameter 'version' must be defined.\");\r\n        url_ = url_.replace(\"{version}\", encodeURIComponent(\"\" + version));\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_: RequestInit = {\r\n            method: \"DELETE\",\r\n            headers: {\r\n            }\r\n        };\r\n\r\n        return this.transformOptions(options_).then(transformedOptions_ => {\r\n            return this.http.fetch(url_, transformedOptions_);\r\n        }).then((_response: Response) => {\r\n            return this.processUpdateNoteDELETE(_response);\r\n        });\r\n    }\r\n\r\n    protected processUpdateNoteDELETE(response: Response): Promise<void> {\r\n        const status = response.status;\r\n        let _headers: any = {}; if (response.headers && response.headers.forEach) { response.headers.forEach((v: any, k: any) => _headers[k] = v); };\r\n        if (status === 204) {\r\n            return response.text().then((_responseText) => {\r\n            return;\r\n            });\r\n        } else if (status === 401) {\r\n            return response.text().then((_responseText) => {\r\n            let result401: any = null;\r\n            result401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver) as ProblemDetails;\r\n            return throwException(\"Unauthorized\", status, _responseText, _headers, result401);\r\n            });\r\n        } else if (status !== 200 && status !== 204) {\r\n            return response.text().then((_responseText) => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            });\r\n        }\r\n        return Promise.resolve<void>(null as any);\r\n    }\r\n}\r\n\r\nexport interface CreateNoteDto {\r\n    title: string;\r\n    details?: string | undefined;\r\n}\r\n\r\nexport interface NoteDetailsVm {\r\n    id?: string;\r\n    title?: string | undefined;\r\n    details?: string | undefined;\r\n    creationDate?: Date;\r\n    editDate?: Date | undefined;\r\n}\r\n\r\nexport interface NoteListVm {\r\n    notes?: NoteLookupDto[] | undefined;\r\n}\r\n\r\nexport interface NoteLookupDto {\r\n    id?: string;\r\n    title?: string | undefined;\r\n}\r\n\r\nexport interface ProblemDetails {\r\n    type?: string | undefined;\r\n    title?: string | undefined;\r\n    status?: number | undefined;\r\n    detail?: string | undefined;\r\n    instance?: string | undefined;\r\n\r\n    [key: string]: any;\r\n}\r\n\r\nexport interface UpdateNoteDto {\r\n    id?: string;\r\n    title?: string | undefined;\r\n    details?: string | undefined;\r\n}\r\n\r\nexport class ApiException extends Error {\r\n    message: string;\r\n    status: number;\r\n    response: string;\r\n    headers: { [key: string]: any; };\r\n    result: any;\r\n\r\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\r\n        super();\r\n\r\n        this.message = message;\r\n        this.status = status;\r\n        this.response = response;\r\n        this.headers = headers;\r\n        this.result = result;\r\n    }\r\n\r\n    protected isApiException = true;\r\n\r\n    static isApiException(obj: any): obj is ApiException {\r\n        return obj.isApiException === true;\r\n    }\r\n}\r\n\r\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): any {\r\n    if (result !== null && result !== undefined)\r\n        throw result;\r\n    else\r\n        throw new ApiException(message, status, response, headers, null);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}